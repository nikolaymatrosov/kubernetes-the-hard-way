apiVersion: v1
kind: ServiceAccount
metadata:
  name: yandex-cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:cloud-controller-manager
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["nodes/status"]
  verbs: ["patch"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["create", "get"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "update", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "update", "watch"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["create", "get", "list", "watch", "update"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cloud-controller-manager
subjects:
- kind: ServiceAccount
  name: yandex-cloud-controller-manager
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: yandex-cloud-controller-manager
  namespace: kube-system
  labels:
    k8s-app: yandex-cloud-controller-manager
spec:
  selector:
    matchLabels:
      k8s-app: yandex-cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: yandex-cloud-controller-manager
    spec:
      serviceAccountName: yandex-cloud-controller-manager
      tolerations:
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      containers:
      - name: yandex-cloud-controller-manager
        image: yandex/cloud-controller-manager:latest
        imagePullPolicy: Always
        command:
        - /bin/yandex-cloud-controller-manager
        - --v=2
        - --cloud-provider=yandex
        - --leader-elect=true
        - --leader-elect-lease-duration=15s
        - --leader-elect-renew-deadline=10s
        - --leader-elect-retry-period=2s
        - --use-service-account-credentials=true
        - --allocate-node-cidrs=true
        - --cluster-cidr=10.200.0.0/16
        - --configure-cloud-routes=true
        - --cluster-name=kubernetes-the-hard-way
        env:
        - name: YC_FOLDER_ID
          valueFrom:
            secretKeyRef:
              name: yandex-cloud-controller-manager-secret
              key: folder-id
        - name: YC_SA_KEY_JSON
          valueFrom:
            secretKeyRef:
              name: yandex-cloud-controller-manager-secret
              key: sa-key-json
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10258
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10258
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 15
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Secret
metadata:
  name: yandex-cloud-controller-manager-secret
  namespace: kube-system
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  folder-id: <BASE64_ENCODED_FOLDER_ID>
  sa-key-json: <BASE64_ENCODED_SERVICE_ACCOUNT_KEY> 